/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Quickstart API Reference
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.

To use the Quickstart API, you must have the following features enabled on your tenant:
 
* [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)
* [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)

To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://developer.zuora.com/quickstart-api/changelog/2022q4-changelog/).
We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.


 * OpenAPI spec version: 2024-01-24
 */
import type { SubscriptionItemApplyDiscountToItem } from './subscriptionItemApplyDiscountToItem';
import type { SubscriptionItemCustomFields } from './subscriptionItemCustomFields';
import type { SubscriptionItemCustomObjects } from './subscriptionItemCustomObjects';
import type { SubscriptionItemDiscountLevel } from './subscriptionItemDiscountLevel';
import type { SubscriptionItemOverage } from './subscriptionItemOverage';
import type { SubscriptionItemPrice } from './subscriptionItemPrice';
import type { SubscriptionItemPriceBaseInterval } from './subscriptionItemPriceBaseInterval';
import type { SubscriptionItemRecurring } from './subscriptionItemRecurring';
import type { SubscriptionItemStartEvent } from './subscriptionItemStartEvent';
import type { SubscriptionItemState } from './subscriptionItemState';
import type { SubscriptionItemSubscriptionPlan } from './subscriptionItemSubscriptionPlan';
import type { ItemTier } from './itemTier';
import type { SubscriptionItemTiersMode } from './subscriptionItemTiersMode';
/**
 * Subscription item information.
 */
export interface SubscriptionItem {
    /** Indicates whether the price is active and can be used for new purchases. */
    active?: boolean;
    /** The amount of the price. Specify this field if you want to override the original price with a flat-fee price */
    amount?: number;
    /** Any combination of one_time, recurring and plan. */
    apply_discount_to?: SubscriptionItemApplyDiscountToItem[];
    /** Charge model of the price. See [Charge models](https://knowledgecenter.zuora.com/Billing/Subscriptions/Product_Catalog/B_Charge_Models) for more information. */
    charge_model?: string;
    /** Type of the charge. It can be one of the following types: one-time, recurring, or usage. */
    charge_type?: string;
    /** The date through which a customer has been billed for the subscription item. */
    charged_through_date?: Date;
    /** Unique identifier of the Zuora user who created the object */
    readonly created_by_id?: string;
    /** The date and time when the object was created in ISO 8601 UTC format. */
    readonly created_time?: Date;
    /** Set of user-defined fields associated with this object. Useful for storing additional information about the object in a structured format. */
    custom_fields?: SubscriptionItemCustomFields;
    /** The custom objects associated with a Zuora standard object. */
    readonly custom_objects?: SubscriptionItemCustomObjects;
    /** An arbitrary string attached to the object. Often useful for displaying to users. */
    description?: string;
    /** Discount amount. Specify this field if you offer an amount-based discount. */
    discount_amount?: number;
    /** Specifies at what level a discount should be applied: one of account, subscription or plan. */
    discount_level?: SubscriptionItemDiscountLevel;
    /** Discount percent. Specify this field if you offer a percentage-based discount. */
    discount_percent?: number;
    /** The date when the subscription item ends. */
    readonly end_date?: Date;
    /** Unique identifier for the object. */
    readonly id?: string;
    /** The name of the subscription item. */
    name?: string;
    /** An object defining how overage charges are calculated. */
    overage?: SubscriptionItemOverage;
    /** Price information. */
    price?: SubscriptionItemPrice;
    /** Specifies the base interval of the price the subscriber is subscribed to. If not provided, this field defaults to `billing_period`. */
    price_base_interval?: SubscriptionItemPriceBaseInterval;
    /** Identifier of the price. */
    price_id?: string;
    /** The date until when charges are processed. When billing takes place in arrears, such as usage-based prices, this field value is the the same as the `ChargedThroughDate` value. This date is the earliest date when a charge can be amended. */
    readonly processed_through_date?: Date;
    /** Identifier of the product with which this subscription is associated. */
    product_id?: string;
    /** Quantity of the product to which your customers subscribe. */
    quantity?: number;
    /** The recurring components of a price such as interval and usage. */
    recurring?: SubscriptionItemRecurring;
    /** The date when the subscription item starts. */
    readonly start_date?: Date;
    /** Specifies when to start billing your customer. */
    start_event?: SubscriptionItemStartEvent;
    /** Based on the current date to populate a state field with the enumeration: [inactive, active, expired] where inactive would represent charge segments with a start_date in the future and expired charge segments with an end_date in the past. */
    state?: SubscriptionItemState;
    /** Human-readable identifier of the subscription item. It can be user-supplied. */
    subscription_item_number?: string;
    /** Subscription plan information. */
    subscription_plan?: SubscriptionItemSubscriptionPlan;
    /** Identifier of the subscription plan this subscription item belongs to. */
    subscription_plan_id?: string;
    /** A tax code identifier. If the `tax_code` of a price is not provided when you create or override a price, Zuora will treat the charged amount as non-taxable. If this code is provide, Zuora considers that this price is taxable and the charged amount will be handled accordingly. */
    tax_code?: string;
    /** If this field is set to `true`, it indicates that amounts are inclusive of tax. */
    tax_inclusive?: boolean;
    tiers?: ItemTier[];
    /** Specifies the kind of tiering. */
    tiers_mode?: SubscriptionItemTiersMode;
    /** The unit amount of the price. Specify this field if you want to override the original price with a per-unit price. */
    unit_amount?: number;
    /** A configured unit of measure. This field is required for per-unit prices. */
    unit_of_measure?: string;
    /** Unique identifier of the Zuora user who last updated the object */
    readonly updated_by_id?: string;
    /** The date and time when the object was last updated in ISO 8601 UTC format. */
    readonly updated_time?: Date;
}

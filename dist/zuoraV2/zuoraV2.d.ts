/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Quickstart API Reference
 * Zuora Quickstart API is recommended for new customers and integrators, allowing new integrators to swiftly integrate with Zuora. It supports essential business use cases.

To use the Quickstart API, you must have the following features enabled on your tenant:
 
* [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization)
* [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement)

To find the latest changes made to the Zuora Quickstart API, check the [Quickstart API Changelog](https://developer.zuora.com/quickstart-api/changelog/2022q4-changelog/).
We recommend that you subscribe to [Developers Community](https://community.zuora.com/communities/community-home?communitykey=e2a932b4-50c4-4019-a3e8-362e38714df3) to get notifications when a new version is released.


 * OpenAPI spec version: 2024-01-24
 */
import type { Account, AccountCreateRequest, AccountPatchRequest, AccountPreviewRequest, AccountPreviewResponse, ActivateOrderParams, ActivateSubscriptionParams, ApplyCreditMemoParams, ApplyPaymentParams, ApplyUnapplyCreditMemo, BillRun, BillRunCreateRequest, BillRunListResponse, BillRunPostRequest, BillRunPreview, BillRunPreviewCreateRequest, BillingDocument, BillingDocumentCreateRequest, BillingDocumentItemListResponse, BillingDocumentListResponse, CancelBillRunParams, CancelCreditMemoParams, CancelDebitMemoParams, CancelInvoiceParams, CancelOrderParams, CancelPaymentParams, CancelPaymentScheduleItemParams, CancelPaymentScheduleParams, CancelQueryRunParams, CancelRefundParams, CancelSubscriptionParams, CancelSubscriptionRequest, Contact, ContactCreateRequest, ContactPatchRequest, CreateAccountParams, CreateBillRunParams, CreateBillRunPreviewParams, CreateContactParams, CreateCreditMemoParams, CreateCustomObjectParams, CreateDebitMemoParams, CreateFulfillmentItemParams, CreateFulfillmentItemsParams, CreateFulfillmentParams, CreateFulfillmentsParams, CreateInvoiceParams, CreateOrderParams, CreatePaymentMethodParams, CreatePaymentParams, CreatePaymentRunsParams, CreatePaymentScheduleItemParams, CreatePaymentScheduleParams, CreatePlanParams, CreatePriceParams, CreateProductParams, CreateQueryRunParams, CreateRefundParams, CreateSubscriptionParams, CreateTaxationItemParams, CreateUsageParams, CreditMemo, CreditMemoCreateRequest, CreditMemoItemListResponse, CreditMemoListResponse, CreditMemoPatchRequest, CustomObject, CustomObjectCreateRequest, CustomObjectPatchRequest, DebitMemo, DebitMemoCreateRequest, DebitMemoItemListResponse, DebitMemoListResponse, DebitMemoPatchRequest, FilfillmentItemListResponse, FilfillmentListResponse, Fulfillment, FulfillmentCreateBulkRequest, FulfillmentCreateBulkResponse, FulfillmentCreateRequest, FulfillmentItem, FulfillmentItemCreateBulkRequest, FulfillmentItemCreateBulkResponse, FulfillmentItemCreateRequest, FulfillmentItemPatchRequest, FulfillmentPatchRequest, GenerateBillingDocumentsAccountRequest, GenerateBillingDocumentsAccountResponse, GetAccountParams, GetAccountsParams, GetBillRunParams, GetBillRunPreviewParams, GetBillRunsParams, GetBillingDocumentItemsParams, GetBillingDocumentParams, GetBillingDocumentsParams, GetContactParams, GetContactsParams, GetCreditMemoItemsParams, GetCreditMemoParams, GetCreditMemosParams, GetCustomObjectParams, GetCustomObjectsParams, GetDebitMemoItemsParams, GetDebitMemoParams, GetDebitMemoesParams, GetFulfillmentItemParams, GetFulfillmentItemsParams, GetFulfillmentParams, GetFulfillmentsParams, GetInvoiceItemsParams, GetInvoiceParams, GetInvoicesParams, GetOrderLineItemParams, GetOrderParams, GetOrdersParams, GetPaymentMethodByIdParams, GetPaymentMethodsParams, GetPaymentParams, GetPaymentRunParams, GetPaymentRunsParams, GetPaymentScheduleItemParams, GetPaymentScheduleParams, GetPaymentsParams, GetPlanParams, GetPlansParams, GetPriceParams, GetPricesParams, GetProductParams, GetProductsParams, GetQueryRunParams, GetRefundParams, GetRefundsParams, GetSubscriptionByKeyParams, GetSubscriptionByVersionParams, GetSubscriptionItemsParams, GetSubscriptionPlanParams, GetSubscriptionPlansParams, GetSubscriptionsParams, GetTaxationItemParams, GetTaxationItemsParams, GetUsageParams, GetUsageRecordsParams, Invoice, InvoiceCreateRequest, InvoiceItemListResponse, InvoiceListResponse, InvoicePatchRequest, InvoiceReverseRequest, LineItemPatchRequest, ListAccountResponse, ListContactResponse, ListCustomObjectResponse, ListUsageResponse, Order, OrderCancelResponse, OrderCancellationRequest, OrderCreateRequest, OrderLineItem, OrderListResponse, OrderPreviewCreateRequest, OrderPreviewResponse, PatchCreditMemoParams, PatchDebitMemoParams, PatchInvoiceParams, PatchOrderLineItemParams, PatchPriceParams, PatchSubscriptionParams, PauseSubscriptionParams, PauseSubscriptionRequest, PayDebitMemoParams, PayDebitMemoRequest, PayInvoiceParams, PayInvoiceRequest, Payment, PaymentApplyUnapplyRequest, PaymentCreateRequest, PaymentListResponse, PaymentMethod, PaymentMethodAuthorizationRequest, PaymentMethodAuthorizationResponse, PaymentMethodCreateRequest, PaymentMethodListResponse, PaymentMethodPatchRequest, PaymentMethodVerificationRequest, PaymentMethodVoidAuthorizationRequest, PaymentPatchRequest, PaymentRun, PaymentRunCreateRequest, PaymentRunListResponse, PaymentRunPatchRequest, PaymentSchedule, PaymentScheduleCancel, PaymentScheduleCreateRequest, PaymentScheduleItem, PaymentScheduleItemCreateRequest, PaymentScheduleItemPatch, PaymentScheduleItemRetry, PaymentSchedulePatchRequest, Plan, PlanCreateRequest, PlanListResponse, PlanPatchRequest, PostBillRunParams, PostBillingDocumentParams, PostCreditMemoParams, PostInvoiceParams, PostsDebitMemoParams, Price, PriceCreateRequest, PriceListResponse, PricePatchRequest, Product, ProductCreateRequest, ProductListResponse, ProductPatchRequest, QueryRun, QueryRunCreateRequest, Refund, RefundCreateRequest, RefundListResponse, RefundPatchRequest, ResumeSubscriptionParams, ResumeSubscriptionRequest, RetryPaymentScheduleItemParams, ReverseInvoiceParams, RunWorkflowRequest, ScrubContactParams, SkipPaymentScheduleItemParams, Subscription, SubscriptionActivateRequest, SubscriptionCancelResponse, SubscriptionCreateRequest, SubscriptionItemListResponse, SubscriptionListResponse, SubscriptionPatchRequest, SubscriptionPlan, SubscriptionPlanListResponse, SubscriptionPreviewExistingRequest, SubscriptionPreviewRequest, SubscriptionPreviewResponse, SubscriptionVersionListResponse, TaxationItem, TaxationItemCreateRequest, TaxationItemListResponse, TaxationItemPatchRequest, UnapplyCreditMemoParams, UnapplyPaymentParams, UncancelSubscriptionParams, UnpostCreditMemoParams, UnpostInvoiceParams, UnpostsDebitMemoParams, UpdateAccountParams, UpdateContactParams, UpdateCustomObjectParams, UpdateFulfillmentItemParams, UpdateFulfillmentParams, UpdatePaymentMethodParams, UpdatePaymentParams, UpdatePaymentRunsParams, UpdatePaymentScheduleItemParams, UpdatePaymentScheduleParams, UpdatePlanParams, UpdateProductParams, UpdateRefundParams, UpdateTaxationItemParams, UpdateUsageParams, Usage, UsageCreateRequest, UsagePatchRequest, VerifyPaymentMethodParams, WorkflowRun, WriteOffInvoiceParams, WriteOffRequest } from './api';
import { customInstance } from '../custom-instance';
type IsAny<T> = 0 extends 1 & T ? true : false;
type IsUnknown<T> = IsAny<T> extends true ? false : unknown extends T ? true : false;
type Primitive = string | number | boolean | bigint | symbol | undefined | null;
type isBuiltin = Primitive | Function | Date | Error | RegExp;
type NonReadonly<T> = T extends Exclude<isBuiltin, Error> ? T : T extends Map<infer Key, infer Value> ? Map<NonReadonly<Key>, NonReadonly<Value>> : T extends ReadonlyMap<infer Key, infer Value> ? Map<NonReadonly<Key>, NonReadonly<Value>> : T extends WeakMap<infer Key, infer Value> ? WeakMap<NonReadonly<Key>, NonReadonly<Value>> : T extends Set<infer Values> ? Set<NonReadonly<Values>> : T extends ReadonlySet<infer Values> ? Set<NonReadonly<Values>> : T extends WeakSet<infer Values> ? WeakSet<NonReadonly<Values>> : T extends Promise<infer Value> ? Promise<NonReadonly<Value>> : T extends {} ? {
    -readonly [Key in keyof T]: NonReadonly<T[Key]>;
} : IsUnknown<T> extends true ? unknown : T;
type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];
export declare const getQuickstartAPIReference: () => {
    getAccounts: (params?: GetAccountsParams, options?: SecondParameter<typeof customInstance>) => Promise<ListAccountResponse>;
    createAccount: (accountCreateRequest: NonReadonly<AccountCreateRequest>, params?: CreateAccountParams, options?: SecondParameter<typeof customInstance>) => Promise<Account>;
    getAccount: (accountId: string, params?: GetAccountParams, options?: SecondParameter<typeof customInstance>) => Promise<Account>;
    updateAccount: (accountId: string, accountPatchRequest: NonReadonly<AccountPatchRequest>, params?: UpdateAccountParams, options?: SecondParameter<typeof customInstance>) => Promise<Account>;
    deleteAccount: (accountId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    generateBillingDocuments: (accountId: string, generateBillingDocumentsAccountRequest: GenerateBillingDocumentsAccountRequest, options?: SecondParameter<typeof customInstance>) => Promise<GenerateBillingDocumentsAccountResponse>;
    previewAccount: (accountId: string, accountPreviewRequest: AccountPreviewRequest, options?: SecondParameter<typeof customInstance>) => Promise<AccountPreviewResponse>;
    getBillingDocument: (billingDocumentId: string, params?: GetBillingDocumentParams, options?: SecondParameter<typeof customInstance>) => Promise<BillingDocument>;
    getBillingDocuments: (params?: GetBillingDocumentsParams, options?: SecondParameter<typeof customInstance>) => Promise<BillingDocumentListResponse>;
    postBillingDocument: (billingDocumentCreateRequest: BillingDocumentCreateRequest, params?: PostBillingDocumentParams, options?: SecondParameter<typeof customInstance>) => Promise<BillingDocument>;
    getBillingDocumentItems: (params?: GetBillingDocumentItemsParams, options?: SecondParameter<typeof customInstance>) => Promise<BillingDocumentItemListResponse>;
    getContact: (contactId: string, params?: GetContactParams, options?: SecondParameter<typeof customInstance>) => Promise<Contact>;
    updateContact: (contactId: string, contactPatchRequest: NonReadonly<ContactPatchRequest>, params?: UpdateContactParams, options?: SecondParameter<typeof customInstance>) => Promise<Contact>;
    deleteContact: (contactId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getContacts: (params?: GetContactsParams, options?: SecondParameter<typeof customInstance>) => Promise<ListContactResponse>;
    createContact: (contactCreateRequest: NonReadonly<ContactCreateRequest>, params?: CreateContactParams, options?: SecondParameter<typeof customInstance>) => Promise<Contact>;
    scrubContact: (contactId: string, params?: ScrubContactParams, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getPaymentMethods: (params?: GetPaymentMethodsParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentMethodListResponse>;
    createPaymentMethod: (paymentMethodCreateRequest: NonReadonly<PaymentMethodCreateRequest>, params?: CreatePaymentMethodParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentMethod>;
    getPaymentMethodById: (paymentMethodId: string, params?: GetPaymentMethodByIdParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentMethod>;
    updatePaymentMethod: (paymentMethodId: string, paymentMethodPatchRequest: PaymentMethodPatchRequest, params?: UpdatePaymentMethodParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentMethod>;
    deletePaymentMethod: (paymentMethodId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    verifyPaymentMethod: (paymentMethodId: string, paymentMethodVerificationRequest: PaymentMethodVerificationRequest, params?: VerifyPaymentMethodParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentMethod>;
    authorizePaymentMethod: (paymentMethodId: string, paymentMethodAuthorizationRequest: PaymentMethodAuthorizationRequest, options?: SecondParameter<typeof customInstance>) => Promise<PaymentMethodAuthorizationResponse>;
    voidAuthorizationPaymentMethod: (paymentMethodId: string, paymentMethodVoidAuthorizationRequest: PaymentMethodVoidAuthorizationRequest, options?: SecondParameter<typeof customInstance>) => Promise<PaymentMethodAuthorizationResponse>;
    scrubPaymentMethod: (paymentMethodId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getSubscriptionByKey: (subscriptionId: string, params?: GetSubscriptionByKeyParams, options?: SecondParameter<typeof customInstance>) => Promise<Subscription>;
    patchSubscription: (subscriptionId: string, subscriptionPatchRequest: SubscriptionPatchRequest, params?: PatchSubscriptionParams, options?: SecondParameter<typeof customInstance>) => Promise<Subscription>;
    getSubscriptions: (params?: GetSubscriptionsParams, options?: SecondParameter<typeof customInstance>) => Promise<SubscriptionListResponse>;
    createSubscription: (subscriptionCreateRequest: NonReadonly<SubscriptionCreateRequest>, params?: CreateSubscriptionParams, options?: SecondParameter<typeof customInstance>) => Promise<Subscription>;
    pauseSubscription: (subscriptionId: string, pauseSubscriptionRequest: PauseSubscriptionRequest, params?: PauseSubscriptionParams, options?: SecondParameter<typeof customInstance>) => Promise<Subscription>;
    resumeSubscription: (subscriptionId: string, resumeSubscriptionRequest: ResumeSubscriptionRequest, params?: ResumeSubscriptionParams, options?: SecondParameter<typeof customInstance>) => Promise<Subscription>;
    cancelSubscription: (subscriptionId: string, cancelSubscriptionRequest: CancelSubscriptionRequest, params?: CancelSubscriptionParams, options?: SecondParameter<typeof customInstance>) => Promise<SubscriptionCancelResponse>;
    uncancelSubscription: (subscriptionId: string, subscriptionPatchRequest: SubscriptionPatchRequest, params?: UncancelSubscriptionParams, options?: SecondParameter<typeof customInstance>) => Promise<Subscription>;
    activateSubscription: (subscriptionId: string, subscriptionActivateRequest: SubscriptionActivateRequest, params?: ActivateSubscriptionParams, options?: SecondParameter<typeof customInstance>) => Promise<Subscription>;
    previewSubscription: (subscriptionPreviewRequest: NonReadonly<SubscriptionPreviewRequest>, options?: SecondParameter<typeof customInstance>) => Promise<SubscriptionPreviewResponse>;
    previewExistingSubscription: (subscriptionId: string, subscriptionPreviewExistingRequest: SubscriptionPreviewExistingRequest, options?: SecondParameter<typeof customInstance>) => Promise<SubscriptionPreviewResponse>;
    getSubscriptionByVersion: (subscriptionId: string, params?: GetSubscriptionByVersionParams, options?: SecondParameter<typeof customInstance>) => Promise<SubscriptionVersionListResponse>;
    runWorkflow: (workflowId: number, runWorkflowRequest: RunWorkflowRequest, options?: SecondParameter<typeof customInstance>) => Promise<WorkflowRun>;
    getProduct: (productId: string, params?: GetProductParams, options?: SecondParameter<typeof customInstance>) => Promise<Product>;
    updateProduct: (productId: string, productPatchRequest: NonReadonly<ProductPatchRequest>, params?: UpdateProductParams, options?: SecondParameter<typeof customInstance>) => Promise<Product>;
    deleteProduct: (productId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getProducts: (params?: GetProductsParams, options?: SecondParameter<typeof customInstance>) => Promise<ProductListResponse>;
    createProduct: (productCreateRequest: NonReadonly<ProductCreateRequest>, params?: CreateProductParams, options?: SecondParameter<typeof customInstance>) => Promise<Product>;
    getPlan: (planId: string, params?: GetPlanParams, options?: SecondParameter<typeof customInstance>) => Promise<Plan>;
    updatePlan: (planId: string, planPatchRequest: NonReadonly<PlanPatchRequest>, params?: UpdatePlanParams, options?: SecondParameter<typeof customInstance>) => Promise<Plan>;
    deletePlan: (planId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getPlans: (params?: GetPlansParams, options?: SecondParameter<typeof customInstance>) => Promise<PlanListResponse>;
    createPlan: (planCreateRequest: NonReadonly<PlanCreateRequest>, params?: CreatePlanParams, options?: SecondParameter<typeof customInstance>) => Promise<Plan>;
    getPrice: (priceId: string, params?: GetPriceParams, options?: SecondParameter<typeof customInstance>) => Promise<Price>;
    patchPrice: (priceId: string, pricePatchRequest: NonReadonly<PricePatchRequest>, params?: PatchPriceParams, options?: SecondParameter<typeof customInstance>) => Promise<Price>;
    deletePrice: (priceId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getPrices: (params?: GetPricesParams, options?: SecondParameter<typeof customInstance>) => Promise<PriceListResponse>;
    createPrice: (priceCreateRequest: NonReadonly<PriceCreateRequest>, params?: CreatePriceParams, options?: SecondParameter<typeof customInstance>) => Promise<Price>;
    getPayment: (paymentId: string, params?: GetPaymentParams, options?: SecondParameter<typeof customInstance>) => Promise<Payment>;
    updatePayment: (paymentId: string, paymentPatchRequest: NonReadonly<PaymentPatchRequest>, params?: UpdatePaymentParams, options?: SecondParameter<typeof customInstance>) => Promise<Payment>;
    getPayments: (params?: GetPaymentsParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentListResponse>;
    createPayment: (paymentCreateRequest: NonReadonly<PaymentCreateRequest>, params?: CreatePaymentParams, options?: SecondParameter<typeof customInstance>) => Promise<Payment>;
    cancelPayment: (paymentId: string, params?: CancelPaymentParams, options?: SecondParameter<typeof customInstance>) => Promise<Payment>;
    applyPayment: (paymentId: string, paymentApplyUnapplyRequest: PaymentApplyUnapplyRequest, params?: ApplyPaymentParams, options?: SecondParameter<typeof customInstance>) => Promise<Payment>;
    unapplyPayment: (paymentId: string, paymentApplyUnapplyRequest: PaymentApplyUnapplyRequest, params?: UnapplyPaymentParams, options?: SecondParameter<typeof customInstance>) => Promise<Payment>;
    getSubscriptionPlan: (subscriptionPlanId: string, params?: GetSubscriptionPlanParams, options?: SecondParameter<typeof customInstance>) => Promise<SubscriptionPlan>;
    getSubscriptionPlans: (params?: GetSubscriptionPlansParams, options?: SecondParameter<typeof customInstance>) => Promise<SubscriptionPlanListResponse>;
    getSubscriptionItems: (params?: GetSubscriptionItemsParams, options?: SecondParameter<typeof customInstance>) => Promise<SubscriptionItemListResponse>;
    getRefunds: (params?: GetRefundsParams, options?: SecondParameter<typeof customInstance>) => Promise<RefundListResponse>;
    createRefund: (refundCreateRequest: NonReadonly<RefundCreateRequest>, params?: CreateRefundParams, options?: SecondParameter<typeof customInstance>) => Promise<Refund>;
    getRefund: (refundId: string, params?: GetRefundParams, options?: SecondParameter<typeof customInstance>) => Promise<Refund>;
    updateRefund: (refundId: string, refundPatchRequest: RefundPatchRequest, params?: UpdateRefundParams, options?: SecondParameter<typeof customInstance>) => Promise<Refund>;
    deleteRefund: (refundId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    cancelRefund: (refundId: string, params?: CancelRefundParams, options?: SecondParameter<typeof customInstance>) => Promise<Refund>;
    getCustomObjects: (customObjectType: string, params?: GetCustomObjectsParams, options?: SecondParameter<typeof customInstance>) => Promise<ListCustomObjectResponse>;
    createCustomObject: (customObjectType: string, customObjectCreateRequest: CustomObjectCreateRequest, params?: CreateCustomObjectParams, options?: SecondParameter<typeof customInstance>) => Promise<CustomObject>;
    getCustomObject: (customObjectType: string, customObjectId: string, params?: GetCustomObjectParams, options?: SecondParameter<typeof customInstance>) => Promise<CustomObject>;
    updateCustomObject: (customObjectType: string, customObjectId: string, customObjectPatchRequest: CustomObjectPatchRequest, params?: UpdateCustomObjectParams, options?: SecondParameter<typeof customInstance>) => Promise<CustomObject>;
    deleteCustomObject: (customObjectType: string, customObjectId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getBillRun: (billRunId: string, params?: GetBillRunParams, options?: SecondParameter<typeof customInstance>) => Promise<BillRun>;
    deleteBillRun: (billRunId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getBillRuns: (params?: GetBillRunsParams, options?: SecondParameter<typeof customInstance>) => Promise<BillRunListResponse>;
    createBillRun: (billRunCreateRequest: NonReadonly<BillRunCreateRequest>, params?: CreateBillRunParams, options?: SecondParameter<typeof customInstance>) => Promise<BillRun>;
    postBillRun: (billRunId: string, billRunPostRequest: BillRunPostRequest, params?: PostBillRunParams, options?: SecondParameter<typeof customInstance>) => Promise<BillRun>;
    cancelBillRun: (billRunId: string, params?: CancelBillRunParams, options?: SecondParameter<typeof customInstance>) => Promise<BillRun>;
    getUsageRecords: (params?: GetUsageRecordsParams, options?: SecondParameter<typeof customInstance>) => Promise<ListUsageResponse>;
    createUsage: (usageCreateRequest: UsageCreateRequest, params?: CreateUsageParams, options?: SecondParameter<typeof customInstance>) => Promise<Usage>;
    getUsage: (id: string, params?: GetUsageParams, options?: SecondParameter<typeof customInstance>) => Promise<Usage>;
    updateUsage: (id: string, usagePatchRequest: UsagePatchRequest, params?: UpdateUsageParams, options?: SecondParameter<typeof customInstance>) => Promise<Usage>;
    deleteUsage: (id: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getOrders: (params?: GetOrdersParams, options?: SecondParameter<typeof customInstance>) => Promise<OrderListResponse>;
    createOrder: (orderCreateRequest: NonReadonly<OrderCreateRequest>, params?: CreateOrderParams, options?: SecondParameter<typeof customInstance>) => Promise<Order>;
    getOrder: (orderId: string, params?: GetOrderParams, options?: SecondParameter<typeof customInstance>) => Promise<Order>;
    deleteOrder: (orderId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    createOrderPreview: (orderPreviewCreateRequest: OrderPreviewCreateRequest, options?: SecondParameter<typeof customInstance>) => Promise<OrderPreviewResponse>;
    activateOrder: (orderId: string, params?: ActivateOrderParams, options?: SecondParameter<typeof customInstance>) => Promise<Order>;
    cancelOrder: (orderId: string, orderCancellationRequest: OrderCancellationRequest, params?: CancelOrderParams, options?: SecondParameter<typeof customInstance>) => Promise<OrderCancelResponse>;
    getInvoice: (invoiceId: string, params?: GetInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<Invoice>;
    patchInvoice: (invoiceId: string, invoicePatchRequest: InvoicePatchRequest, params?: PatchInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<Invoice>;
    deleteInvoice: (invoiceId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getInvoices: (params?: GetInvoicesParams, options?: SecondParameter<typeof customInstance>) => Promise<InvoiceListResponse>;
    createInvoice: (invoiceCreateRequest: InvoiceCreateRequest, params?: CreateInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<Invoice>;
    getInvoiceItems: (params?: GetInvoiceItemsParams, options?: SecondParameter<typeof customInstance>) => Promise<InvoiceItemListResponse>;
    reverseInvoice: (invoiceId: string, invoiceReverseRequest: InvoiceReverseRequest, params?: ReverseInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<Invoice>;
    postInvoice: (invoiceId: string, params?: PostInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<Invoice>;
    unpostInvoice: (invoiceId: string, params?: UnpostInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<Invoice>;
    emailInvoice: (invoiceId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    payInvoice: (invoiceId: string, payInvoiceRequest: PayInvoiceRequest, params?: PayInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<Invoice>;
    cancelInvoice: (invoiceId: string, params?: CancelInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<Invoice>;
    writeOffInvoice: (invoiceId: string, writeOffRequest: WriteOffRequest, params?: WriteOffInvoiceParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    getDebitMemo: (debitMemoId: string, params?: GetDebitMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemo>;
    patchDebitMemo: (debitMemoId: string, debitMemoPatchRequest: DebitMemoPatchRequest, params?: PatchDebitMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemo>;
    deleteDebitMemo: (debitMemoId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getDebitMemoes: (params?: GetDebitMemoesParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemoListResponse>;
    createDebitMemo: (debitMemoCreateRequest: DebitMemoCreateRequest, params?: CreateDebitMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemo>;
    cancelDebitMemo: (debitMemoId: string, params?: CancelDebitMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemo>;
    getDebitMemoItems: (params?: GetDebitMemoItemsParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemoItemListResponse>;
    postsDebitMemo: (debitMemoId: string, params?: PostsDebitMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemo>;
    unpostsDebitMemo: (debitMemoId: string, params?: UnpostsDebitMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemo>;
    payDebitMemo: (debitMemoId: string, payDebitMemoRequest: PayDebitMemoRequest, params?: PayDebitMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<DebitMemo>;
    getCreditMemo: (creditMemoId: string, params?: GetCreditMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    patchCreditMemo: (creditMemoId: string, creditMemoPatchRequest: CreditMemoPatchRequest, params?: PatchCreditMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    deleteCreditMemo: (creditMemoId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getCreditMemos: (params?: GetCreditMemosParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemoListResponse>;
    createCreditMemo: (creditMemoCreateRequest: CreditMemoCreateRequest, params?: CreateCreditMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    getCreditMemoItems: (params?: GetCreditMemoItemsParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemoItemListResponse>;
    applyCreditMemo: (creditMemoId: string, applyUnapplyCreditMemo: ApplyUnapplyCreditMemo, params?: ApplyCreditMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    unapplyCreditMemo: (creditMemoId: string, applyUnapplyCreditMemo: ApplyUnapplyCreditMemo, params?: UnapplyCreditMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    unpostCreditMemo: (creditMemoId: string, params?: UnpostCreditMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    postCreditMemo: (creditMemoId: string, params?: PostCreditMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    cancelCreditMemo: (creditMemoId: string, params?: CancelCreditMemoParams, options?: SecondParameter<typeof customInstance>) => Promise<CreditMemo>;
    getTaxationItems: (params?: GetTaxationItemsParams, options?: SecondParameter<typeof customInstance>) => Promise<TaxationItemListResponse>;
    createTaxationItem: (taxationItemCreateRequest: TaxationItemCreateRequest, params?: CreateTaxationItemParams, options?: SecondParameter<typeof customInstance>) => Promise<TaxationItem>;
    getTaxationItem: (taxationItemId: string, params?: GetTaxationItemParams, options?: SecondParameter<typeof customInstance>) => Promise<TaxationItem>;
    updateTaxationItem: (taxationItemId: string, taxationItemPatchRequest: NonReadonly<TaxationItemPatchRequest>, params?: UpdateTaxationItemParams, options?: SecondParameter<typeof customInstance>) => Promise<TaxationItem>;
    deleteTaxationItem: (taxationItemId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getPaymentRuns: (params?: GetPaymentRunsParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentRunListResponse>;
    createPaymentRuns: (paymentRunCreateRequest: PaymentRunCreateRequest, params?: CreatePaymentRunsParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentRun>;
    getPaymentRun: (paymentRunId: string, params?: GetPaymentRunParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentRun>;
    updatePaymentRuns: (paymentRunId: string, paymentRunPatchRequest: PaymentRunPatchRequest, params?: UpdatePaymentRunsParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentRun>;
    deletePaymentRuns: (paymentRunId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getOrderLineItem: (orderLineItemId: string, params?: GetOrderLineItemParams, options?: SecondParameter<typeof customInstance>) => Promise<OrderLineItem>;
    patchOrderLineItem: (orderLineItemId: string, lineItemPatchRequest: LineItemPatchRequest, params?: PatchOrderLineItemParams, options?: SecondParameter<typeof customInstance>) => Promise<OrderLineItem>;
    getBillRunPreview: (billRunPreviewId: string, params?: GetBillRunPreviewParams, options?: SecondParameter<typeof customInstance>) => Promise<BillRunPreview>;
    createBillRunPreview: (billRunPreviewCreateRequest: BillRunPreviewCreateRequest, params?: CreateBillRunPreviewParams, options?: SecondParameter<typeof customInstance>) => Promise<BillRunPreview>;
    getQueryRun: (queryRunId: string, params?: GetQueryRunParams, options?: SecondParameter<typeof customInstance>) => Promise<QueryRun>;
    createQueryRun: (queryRunCreateRequest: QueryRunCreateRequest, params?: CreateQueryRunParams, options?: SecondParameter<typeof customInstance>) => Promise<QueryRun>;
    cancelQueryRun: (queryRunId: string, params?: CancelQueryRunParams, options?: SecondParameter<typeof customInstance>) => Promise<QueryRun>;
    getFulfillments: (params?: GetFulfillmentsParams, options?: SecondParameter<typeof customInstance>) => Promise<FilfillmentListResponse>;
    createFulfillment: (fulfillmentCreateRequest: FulfillmentCreateRequest, params?: CreateFulfillmentParams, options?: SecondParameter<typeof customInstance>) => Promise<Fulfillment>;
    getFulfillment: (fulfillmentId: string, params?: GetFulfillmentParams, options?: SecondParameter<typeof customInstance>) => Promise<Fulfillment>;
    updateFulfillment: (fulfillmentId: string, fulfillmentPatchRequest: FulfillmentPatchRequest, params?: UpdateFulfillmentParams, options?: SecondParameter<typeof customInstance>) => Promise<Fulfillment>;
    deleteFulfillment: (fulfillmentId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getFulfillmentItem: (fulfillmentItemId: string, params?: GetFulfillmentItemParams, options?: SecondParameter<typeof customInstance>) => Promise<FulfillmentItem>;
    updateFulfillmentItem: (fulfillmentItemId: string, fulfillmentItemPatchRequest: FulfillmentItemPatchRequest, params?: UpdateFulfillmentItemParams, options?: SecondParameter<typeof customInstance>) => Promise<FulfillmentItem>;
    deleteFulfillmentItem: (fulfillmentItemId: string, options?: SecondParameter<typeof customInstance>) => Promise<void>;
    getFulfillmentItems: (params?: GetFulfillmentItemsParams, options?: SecondParameter<typeof customInstance>) => Promise<FilfillmentItemListResponse>;
    createFulfillmentItem: (fulfillmentItemCreateRequest: FulfillmentItemCreateRequest, params?: CreateFulfillmentItemParams, options?: SecondParameter<typeof customInstance>) => Promise<FulfillmentItem>;
    createFulfillments: (fulfillmentCreateBulkRequest: FulfillmentCreateBulkRequest, params?: CreateFulfillmentsParams, options?: SecondParameter<typeof customInstance>) => Promise<FulfillmentCreateBulkResponse>;
    createFulfillmentItems: (fulfillmentItemCreateBulkRequest: FulfillmentItemCreateBulkRequest, params?: CreateFulfillmentItemsParams, options?: SecondParameter<typeof customInstance>) => Promise<FulfillmentItemCreateBulkResponse>;
    getPaymentScheduleItem: (paymentScheduleItemId: string, params?: GetPaymentScheduleItemParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentScheduleItem>;
    updatePaymentScheduleItem: (paymentScheduleItemId: string, paymentScheduleItemPatch: PaymentScheduleItemPatch, params?: UpdatePaymentScheduleItemParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentScheduleItem>;
    createPaymentScheduleItem: (paymentScheduleItemCreateRequest: PaymentScheduleItemCreateRequest, params?: CreatePaymentScheduleItemParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentScheduleItem>;
    cancelPaymentScheduleItem: (paymentScheduleItemId: string, params?: CancelPaymentScheduleItemParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentScheduleItem>;
    retryPaymentScheduleItem: (paymentScheduleItemId: string, paymentScheduleItemRetry: PaymentScheduleItemRetry, params?: RetryPaymentScheduleItemParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentScheduleItem>;
    skipPaymentScheduleItem: (paymentScheduleItemId: string, params?: SkipPaymentScheduleItemParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentScheduleItem>;
    getPaymentSchedule: (paymentScheduleId: string, params?: GetPaymentScheduleParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentSchedule>;
    updatePaymentSchedule: (paymentScheduleId: string, paymentSchedulePatchRequest: PaymentSchedulePatchRequest, params?: UpdatePaymentScheduleParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentSchedule>;
    createPaymentSchedule: (paymentScheduleCreateRequest: PaymentScheduleCreateRequest, params?: CreatePaymentScheduleParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentSchedule>;
    cancelPaymentSchedule: (paymentScheduleId: string, paymentScheduleCancel: PaymentScheduleCancel, params?: CancelPaymentScheduleParams, options?: SecondParameter<typeof customInstance>) => Promise<PaymentSchedule>;
};
export type GetAccountsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getAccounts']>>>;
export type CreateAccountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createAccount']>>>;
export type GetAccountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getAccount']>>>;
export type UpdateAccountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateAccount']>>>;
export type DeleteAccountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteAccount']>>>;
export type GenerateBillingDocumentsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['generateBillingDocuments']>>>;
export type PreviewAccountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['previewAccount']>>>;
export type GetBillingDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getBillingDocument']>>>;
export type GetBillingDocumentsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getBillingDocuments']>>>;
export type PostBillingDocumentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['postBillingDocument']>>>;
export type GetBillingDocumentItemsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getBillingDocumentItems']>>>;
export type GetContactResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getContact']>>>;
export type UpdateContactResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateContact']>>>;
export type DeleteContactResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteContact']>>>;
export type GetContactsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getContacts']>>>;
export type CreateContactResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createContact']>>>;
export type ScrubContactResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['scrubContact']>>>;
export type GetPaymentMethodsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPaymentMethods']>>>;
export type CreatePaymentMethodResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createPaymentMethod']>>>;
export type GetPaymentMethodByIdResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPaymentMethodById']>>>;
export type UpdatePaymentMethodResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updatePaymentMethod']>>>;
export type DeletePaymentMethodResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deletePaymentMethod']>>>;
export type VerifyPaymentMethodResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['verifyPaymentMethod']>>>;
export type AuthorizePaymentMethodResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['authorizePaymentMethod']>>>;
export type VoidAuthorizationPaymentMethodResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['voidAuthorizationPaymentMethod']>>>;
export type ScrubPaymentMethodResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['scrubPaymentMethod']>>>;
export type GetSubscriptionByKeyResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getSubscriptionByKey']>>>;
export type PatchSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['patchSubscription']>>>;
export type GetSubscriptionsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getSubscriptions']>>>;
export type CreateSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createSubscription']>>>;
export type PauseSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['pauseSubscription']>>>;
export type ResumeSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['resumeSubscription']>>>;
export type CancelSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelSubscription']>>>;
export type UncancelSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['uncancelSubscription']>>>;
export type ActivateSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['activateSubscription']>>>;
export type PreviewSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['previewSubscription']>>>;
export type PreviewExistingSubscriptionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['previewExistingSubscription']>>>;
export type GetSubscriptionByVersionResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getSubscriptionByVersion']>>>;
export type RunWorkflowResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['runWorkflow']>>>;
export type GetProductResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getProduct']>>>;
export type UpdateProductResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateProduct']>>>;
export type DeleteProductResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteProduct']>>>;
export type GetProductsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getProducts']>>>;
export type CreateProductResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createProduct']>>>;
export type GetPlanResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPlan']>>>;
export type UpdatePlanResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updatePlan']>>>;
export type DeletePlanResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deletePlan']>>>;
export type GetPlansResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPlans']>>>;
export type CreatePlanResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createPlan']>>>;
export type GetPriceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPrice']>>>;
export type PatchPriceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['patchPrice']>>>;
export type DeletePriceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deletePrice']>>>;
export type GetPricesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPrices']>>>;
export type CreatePriceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createPrice']>>>;
export type GetPaymentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPayment']>>>;
export type UpdatePaymentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updatePayment']>>>;
export type GetPaymentsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPayments']>>>;
export type CreatePaymentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createPayment']>>>;
export type CancelPaymentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelPayment']>>>;
export type ApplyPaymentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['applyPayment']>>>;
export type UnapplyPaymentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['unapplyPayment']>>>;
export type GetSubscriptionPlanResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getSubscriptionPlan']>>>;
export type GetSubscriptionPlansResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getSubscriptionPlans']>>>;
export type GetSubscriptionItemsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getSubscriptionItems']>>>;
export type GetRefundsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getRefunds']>>>;
export type CreateRefundResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createRefund']>>>;
export type GetRefundResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getRefund']>>>;
export type UpdateRefundResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateRefund']>>>;
export type DeleteRefundResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteRefund']>>>;
export type CancelRefundResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelRefund']>>>;
export type GetCustomObjectsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getCustomObjects']>>>;
export type CreateCustomObjectResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createCustomObject']>>>;
export type GetCustomObjectResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getCustomObject']>>>;
export type UpdateCustomObjectResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateCustomObject']>>>;
export type DeleteCustomObjectResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteCustomObject']>>>;
export type GetBillRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getBillRun']>>>;
export type DeleteBillRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteBillRun']>>>;
export type GetBillRunsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getBillRuns']>>>;
export type CreateBillRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createBillRun']>>>;
export type PostBillRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['postBillRun']>>>;
export type CancelBillRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelBillRun']>>>;
export type GetUsageRecordsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getUsageRecords']>>>;
export type CreateUsageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createUsage']>>>;
export type GetUsageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getUsage']>>>;
export type UpdateUsageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateUsage']>>>;
export type DeleteUsageResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteUsage']>>>;
export type GetOrdersResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getOrders']>>>;
export type CreateOrderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createOrder']>>>;
export type GetOrderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getOrder']>>>;
export type DeleteOrderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteOrder']>>>;
export type CreateOrderPreviewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createOrderPreview']>>>;
export type ActivateOrderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['activateOrder']>>>;
export type CancelOrderResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelOrder']>>>;
export type GetInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getInvoice']>>>;
export type PatchInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['patchInvoice']>>>;
export type DeleteInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteInvoice']>>>;
export type GetInvoicesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getInvoices']>>>;
export type CreateInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createInvoice']>>>;
export type GetInvoiceItemsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getInvoiceItems']>>>;
export type ReverseInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['reverseInvoice']>>>;
export type PostInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['postInvoice']>>>;
export type UnpostInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['unpostInvoice']>>>;
export type EmailInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['emailInvoice']>>>;
export type PayInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['payInvoice']>>>;
export type CancelInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelInvoice']>>>;
export type WriteOffInvoiceResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['writeOffInvoice']>>>;
export type GetDebitMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getDebitMemo']>>>;
export type PatchDebitMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['patchDebitMemo']>>>;
export type DeleteDebitMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteDebitMemo']>>>;
export type GetDebitMemoesResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getDebitMemoes']>>>;
export type CreateDebitMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createDebitMemo']>>>;
export type CancelDebitMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelDebitMemo']>>>;
export type GetDebitMemoItemsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getDebitMemoItems']>>>;
export type PostsDebitMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['postsDebitMemo']>>>;
export type UnpostsDebitMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['unpostsDebitMemo']>>>;
export type PayDebitMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['payDebitMemo']>>>;
export type GetCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getCreditMemo']>>>;
export type PatchCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['patchCreditMemo']>>>;
export type DeleteCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteCreditMemo']>>>;
export type GetCreditMemosResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getCreditMemos']>>>;
export type CreateCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createCreditMemo']>>>;
export type GetCreditMemoItemsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getCreditMemoItems']>>>;
export type ApplyCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['applyCreditMemo']>>>;
export type UnapplyCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['unapplyCreditMemo']>>>;
export type UnpostCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['unpostCreditMemo']>>>;
export type PostCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['postCreditMemo']>>>;
export type CancelCreditMemoResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelCreditMemo']>>>;
export type GetTaxationItemsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getTaxationItems']>>>;
export type CreateTaxationItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createTaxationItem']>>>;
export type GetTaxationItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getTaxationItem']>>>;
export type UpdateTaxationItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateTaxationItem']>>>;
export type DeleteTaxationItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteTaxationItem']>>>;
export type GetPaymentRunsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPaymentRuns']>>>;
export type CreatePaymentRunsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createPaymentRuns']>>>;
export type GetPaymentRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPaymentRun']>>>;
export type UpdatePaymentRunsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updatePaymentRuns']>>>;
export type DeletePaymentRunsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deletePaymentRuns']>>>;
export type GetOrderLineItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getOrderLineItem']>>>;
export type PatchOrderLineItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['patchOrderLineItem']>>>;
export type GetBillRunPreviewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getBillRunPreview']>>>;
export type CreateBillRunPreviewResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createBillRunPreview']>>>;
export type GetQueryRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getQueryRun']>>>;
export type CreateQueryRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createQueryRun']>>>;
export type CancelQueryRunResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelQueryRun']>>>;
export type GetFulfillmentsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getFulfillments']>>>;
export type CreateFulfillmentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createFulfillment']>>>;
export type GetFulfillmentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getFulfillment']>>>;
export type UpdateFulfillmentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateFulfillment']>>>;
export type DeleteFulfillmentResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteFulfillment']>>>;
export type GetFulfillmentItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getFulfillmentItem']>>>;
export type UpdateFulfillmentItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updateFulfillmentItem']>>>;
export type DeleteFulfillmentItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['deleteFulfillmentItem']>>>;
export type GetFulfillmentItemsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getFulfillmentItems']>>>;
export type CreateFulfillmentItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createFulfillmentItem']>>>;
export type CreateFulfillmentsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createFulfillments']>>>;
export type CreateFulfillmentItemsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createFulfillmentItems']>>>;
export type GetPaymentScheduleItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPaymentScheduleItem']>>>;
export type UpdatePaymentScheduleItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updatePaymentScheduleItem']>>>;
export type CreatePaymentScheduleItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createPaymentScheduleItem']>>>;
export type CancelPaymentScheduleItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelPaymentScheduleItem']>>>;
export type RetryPaymentScheduleItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['retryPaymentScheduleItem']>>>;
export type SkipPaymentScheduleItemResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['skipPaymentScheduleItem']>>>;
export type GetPaymentScheduleResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['getPaymentSchedule']>>>;
export type UpdatePaymentScheduleResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['updatePaymentSchedule']>>>;
export type CreatePaymentScheduleResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['createPaymentSchedule']>>>;
export type CancelPaymentScheduleResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getQuickstartAPIReference>['cancelPaymentSchedule']>>>;
export {};
